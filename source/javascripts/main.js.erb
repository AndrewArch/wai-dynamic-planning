(function () {
    'use strict';

    var Tabs, tabs, menu;

    function addclass(el, className) {
        if (el.classList) {
            el.classList.add(className);
        } else {
            el.className += ' ' + className;
        }
    }

    function removeclass(el, className) {
        if (el.classList) {
            el.classList.remove(className);
        } else {
            el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
        }
    }

    function hasclass(el, className) {
        if (el.classList) {
            return el.classList.contains(className);
        } else {
            return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
        }
    }

    function getHash(url) {
        var hashPos = url.lastIndexOf('#');
        return url.substring(hashPos + 1);
    }

    function forEachElement(elements, fn) {
        var i;
        for (i = 0; i < elements.length; i += 1) {
            fn(elements[i], i);
        }
    }

    Tabs = (function () {
        var tabLinks = [],
            tabPanels = [],
            settings = 'false';

        function showPanel(el) {
            var newid = el.getAttribute('aria-controls'),
                currentInfo = null,
                id;
            for (id in tabLinks) {
                if (id === newid) {
                    addclass(tabLinks[id], 'selected');
                    tabLinks[id].innerHTML = '<span class="info">current tab: </span>' + tabLinks[id].innerHTML;
                    tabLinks[id].setAttribute('aria-selected', 'true');
                    removeclass(tabPanels[id], 'hidden');
                    tabPanels[id].focus();
                } else {
                    removeclass(tabLinks[id], 'selected');
                    if ((currentInfo = tabLinks[id].querySelector('.info')) !== null) {
                        tabLinks[id].removeChild(currentInfo);
                    }
                    tabLinks[id].setAttribute('aria-selected', 'false');
                    addclass(tabPanels[id], 'hidden');
                }
            }
        }

        function init(set) {
            settings = set;
            var tabset = document.getElementById(settings.id).querySelectorAll('a'),
                i,
                id;
            for (i = 0; i < tabset.length; i += 1) {
                id = getHash(tabset[i].getAttribute('href'));
                tabLinks[id] = tabset[i];
                tabPanels[id] = document.getElementById(id);
            }

            i = 0;
            for (id in tabLinks) {
                tabLinks[id].setAttribute('aria-controls', id);
                tabLinks[id].setAttribute('role', 'tab');
                tabLinks[id].setAttribute('id', 'tab-' + id);
                tabLinks[id].addEventListener('click', function (e) {
                    e.preventDefault();
                    showPanel(this);
                });

                tabPanels[id].setAttribute('role', 'tabpanel');
                tabPanels[id].setAttribute('aria-labelledby', 'tab-' + id);
                tabPanels[id].setAttribute('tabindex', '-1');

                if (i === 0) {
                    addclass(tabLinks[id], 'selected');
                    tabLinks[id].innerHTML = '<span class="info">current tab: </span>' + tabLinks[id].innerHTML;
                    tabLinks[id].setAttribute('aria-selected', 'true');
                } else {
                    tabLinks[id].setAttribute('aria-selected', 'false');
                    addclass(tabPanels[id], 'hidden');
                }
                i += 1;
            }
        }

        return {
            init: init
        };
    });

    tabs = new Tabs();
    tabs.init({
        id: 'tabs'
    });

    // Provide left slide out menu functionality
    menu = document.querySelectorAll('a.view-menu');
    menu[0].addEventListener('click', function () {
        var elements = document.querySelectorAll('body, #sitenav'), i, moveValue;
        for (i = 0; i < elements.length; i += 1) {
            moveValue = elements[i].style.right === '20em' ? '0em' : '20em';
            Velocity(elements[i], {
                right: moveValue
            }, {
                duration: 300
            });
        }
    });
}());