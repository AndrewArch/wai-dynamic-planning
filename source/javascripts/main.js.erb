(function () {
  'use strict';

	var addclass = function(el, className) {
		if (el.classList)
			el.classList.add(className);
		else
			el.className += ' ' + className;
	}

	var removeclass = function(el, className) {
		if (el.classList)
			el.classList.remove(className);
		else
			el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
	}

	var hasclass = function(el, className) {
		if (el.classList)
			return el.classList.contains(className);
		else
			return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
	}
  
  var getHash = function( url ) {
    var hashPos = url.lastIndexOf ( '#' );
    return url.substring( hashPos + 1 );
  }

  var forEachElement = function(elements, fn) {
    for (var i = 0; i < elements.length; i++)
      fn(elements[i], i);
  }

  var Tabs = (function() {
    var tabLinks = new Array();
    var tabPanels = new Array();
    var settings = 'false';
    
    function init(set) {
      settings = set;
      var tabset = document.getElementById(settings.id).querySelectorAll('a');
      for(var i=0; i < tabset.length; i++) {
        var id = getHash(tabset[i].getAttribute('href'));
        tabLinks[id] = tabset[i];
        tabPanels[id] = document.getElementById(id);
      }
      
      var i = 0;
      for(var id in tabLinks) {
        tabLinks[id].setAttribute('aria-controls', id);
        tabLinks[id].setAttribute('role', 'tab');
        tabLinks[id].setAttribute('id', 'tab-' + id);
        tabLinks[id].addEventListener('click', function(e){
          e.preventDefault();
          showPanel(this);
        });

        tabPanels[id].setAttribute('role', 'tabpanel');
        tabPanels[id].setAttribute('aria-labelledby', 'tab-' + id);
        tabPanels[id].setAttribute('tabindex', '-1');

        if(i==0) {
          addclass(tabLinks[id], 'selected');
          tabLinks[id].innerHTML = '<span>current tab: </span>' + tabLinks[id].innerHTML;
          tabLinks[id].setAttribute('aria-selected', 'true');
        } else {
          tabLinks[id].setAttribute('aria-selected', 'false');
          addclass(tabPanels[id], 'hidden');
        }
        i++
      }
    }
    
    function showPanel(el) {
      var newid = el.getAttribute('aria-controls');
      var currentInfo = null;
      for(var id in tabLinks) {
        if(id == newid) {
          addclass(tabLinks[id], 'selected');
          tabLinks[id].innerHTML = '<span>current tab: </span>' + tabLinks[id].innerHTML;
          tabLinks[id].setAttribute('aria-selected', 'true');
          removeclass(tabPanels[id], 'hidden');
          tabPanels[id].focus();
        } else {
          removeclass(tabLinks[id], 'selected');
          if(currentInfo = tabLinks[id].querySelector('span')) {
            tabLinks[id].removeChild(currentInfo);
          }
          tabLinks[id].setAttribute('aria-selected', 'false');
          addclass(tabPanels[id], 'hidden');
        }
      }
    }
    
    return {
      init: init
    }
  });

  var tabs = new Tabs();
  tabs.init({
    id: 'tabs'
  });
}());